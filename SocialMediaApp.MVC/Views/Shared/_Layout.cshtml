@inject IAuthenticationProcedures _authenticationProcedures;
@inject INotificationDataAccess _notificationDataAccess; 

@{
    AppUser appUser = await _authenticationProcedures.GetCurrentUserAsync();
    string appUserId = "";
    if (appUser is not null){
        appUserId = appUser.Id;
        var result = await _notificationDataAccess.GetNotificationsOfUserAsync(appUserId);
        appUser.Notifications = result.ToList();
    }

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SocialMediaApp</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SocialMediaApp.MVC.styles.css" asp-append-version="true" />
    <script src="https://kit.fontawesome.com/885db78118.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
</head>
<body class="bg-light">
    <header style="margin-bottom:70px;">
        <nav class="navbar navbar-expand-sm navbar-dark bg-dark border-bottom box-shadow mb-3 fixed-top">
            <div class="container">
                <a class="navbar-brand" href="/home">Social Media Application</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse d-sm-inline-flex justify-content-end" id="navbarSupportedContent">
                    <ul class="navbar-nav">
                        <li class="nav-item me-1">
                            <a class="nav-link" asp-controller="Home" asp-action="Index">Home</a>
                        </li>

                        @if (!(await _authenticationProcedures.CheckIfUserIsLoggedIn()))
                        {
                            <li class="nav-item">
                                <a class="nav-link btn btn-outline-primary my-2 my-sm-0" asp-controller="Account" asp-action="SignIn">Sign In</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item" id="notificationSection">
                                <a class="nav-link" asp-controller="Notification" asp-action="ViewNotifications">
                                    Notifications <span class="badge bg-primary rounded-pill" id="notificationSectionBadgeCount">
                                        @appUser!.Notifications.Count</span>
                                </a>
                            </li>
                            <li class="nav-item me-1">
                                <a class="nav-link" asp-controller="Account" asp-action="EditAccount">Account</a>
                            </li>
                            <li class="nav-item">
                                <form method="post">
                                    <button class="nav-link btn btn-outline-primary my-2 my-sm-0" type="submit"
                                            asp-controller="Account" asp-action="LogOut">
                                        Sign Out
                                    </button>
                                </form>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - SocialMediaApp.MVC - Developed By Konstantinos Kinnas
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/NotificationHub")
            .configureLogging(signalR.LogLevel.Information)
            .withAutomaticReconnect()
            .build();

        let notificationSection = document.getElementById('notificationSection');
        if (notificationSection !== null) {
            connection.start().then(function () {
                storeConnectionSignalRId();
            }).catch(function (err) {
                console.error("Error establishing SignalR connection: " + err);
            });
        }

        function storeConnectionSignalRId() {
            connection.invoke("StoreSignalRConnectionId").then(function () {
            }).catch(function (err) {
                console.error("Error setting connection: " + err);
            });
        }

        connection.on("UpdateNotificationCount", function (notificationCount) {
            console.log('lol');
            let badgeCount = document.getElementById('notificationSectionBadgeCount');
            badgeCount.textContent = notificationCount;
        });

    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
